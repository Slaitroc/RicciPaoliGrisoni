@startuml UserOpensComplaint
skinparam sequenceMessageAlign center
actor       User
participant  Presentation
entity      Proxy
participant Authenticator
participant APIController
participant CommunicationManager
participant PlatformEntityManager
participant NotificationManager
database    PlatformDBMS

activate User
User -> Presentation : clickDashboardCommunicationPage()
activate Presentation
Presentation -> Proxy : GET api/comm/private/communications
activate Proxy
Proxy -> Authenticator : GET api/auth/validate
activate Authenticator
Authenticator -> Authenticator : validateToken()
Authenticator --> Proxy : 200 OK
deactivate Authenticator
Proxy -> APIController : GET api/comm/private/communications
activate APIController
APIController -> CommunicationManager : getCommunications(UserID)
activate CommunicationManager
CommunicationManager -> PlatformEntityManager : getCommunications(UserID)
activate PlatformEntityManager
PlatformEntityManager -> PlatformDBMS : buildAndExecuteQuery(Query, Class)
activate PlatformDBMS
PlatformDBMS --> PlatformEntityManager : result
deactivate PlatformDBMS
PlatformEntityManager --> CommunicationManager : result
deactivate PlatformEntityManager
CommunicationManager --> APIController : Communications
deactivate CommunicationManager
APIController --> Proxy : 200 OK : Communications
deactivate APIController
Proxy --> Presentation : 200 OK : Communications
deactivate Proxy
Presentation --> User : displayCommunications()
deactivate Presentation

@enduml