@startuml UserOpensComplaint
skinparam sequenceMessageAlign center
actor       User
participant  Presentation
entity      Proxy
participant Authenticator
participant APIController
participant CommunicationManager
participant PlatformEntityManager
participant NotificationManager
database    PlatformDBMS

activate User
User -> Presentation : clickDashboardCommunicationPage()
activate Presentation
Presentation -> Proxy : GET api/comm/private/communications
activate Proxy
Proxy -> Authenticator : GET api/auth/validate
activate Authenticator
Authenticator -> Authenticator : validateToken()
Authenticator --> Proxy : 200 OK
deactivate Authenticator
Proxy -> APIController : GET api/comm/private/communications
activate APIController
APIController -> CommunicationManager : getComplaints()
activate CommunicationManager
CommunicationManager -> PlatformEntityManager : getComplaints()
activate PlatformEntityManager
PlatformEntityManager -> PlatformDBMS : buildAndExecuteQuery(Query, Class)
activate PlatformDBMS
PlatformDBMS --> PlatformEntityManager : result
deactivate PlatformDBMS
PlatformEntityManager --> CommunicationManager : result
deactivate PlatformEntityManager
CommunicationManager --> APIController : Complaints
deactivate CommunicationManager
APIController --> Proxy : 200 OK : Complaints
deactivate APIController
Proxy --> Presentation : 200 OK : Complaints
deactivate Proxy
Presentation --> User : displayComplaints()
deactivate Presentation
User -> Presentation : clickComplaint(ComplaintID)
activate Presentation
Presentation -> Proxy : GET api/comm/private/communications/{CommunicationID}/full?<params>
activate Proxy
Proxy -> Authenticator : GET api/auth/validate
activate Authenticator
Authenticator -> Authenticator : validateToken()
Authenticator --> Proxy : 200 OK
deactivate Authenticator
Proxy -> APIController : GET api/comm/private/communications/{CommunicationID}/full?<params>
activate APIController
APIController -> APIController : verifyCallParameters()
alt Wrong API Call Parameters
APIController --> Proxy : 400 Bad Request : Error
Proxy --> Presentation : 400 Bad Request : Error
Presentation --> User : displayErrorMessage()
end 
APIController -> CommunicationManager : getCommunication(CommunicationID, Params)
activate CommunicationManager
CommunicationManager -> PlatformEntityManager : getCommunication(CommunicationID, Params)
activate PlatformEntityManager
PlatformEntityManager -> PlatformDBMS : buildAndExecuteQuery(Query, Class)
activate PlatformDBMS
PlatformDBMS --> PlatformEntityManager : result
deactivate PlatformDBMS
PlatformEntityManager --> CommunicationManager : result
deactivate PlatformEntityManager
CommunicationManager --> APIController : Result
deactivate CommunicationManager
APIController --> Proxy : 200 OK : Result
deactivate APIController
Proxy --> Presentation : 200 OK : Result
deactivate Proxy
Presentation --> User : displayComplaint(Complaint)
deactivate Presentation



