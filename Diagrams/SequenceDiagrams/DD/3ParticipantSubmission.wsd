@startuml ParticipantSubmission
skinparam sequenceMessageAlign center
actor       Participant
participant Presentation
entity      Proxy
participant APIController
participant SubmissionManager
participant SuggestionMechanism
participant RecommendationProcess
participant UserManager
participant PlatformEntityManager
participant NotificationManager
database    PlatformDBMS

activate Participant
activate Presentation
Participant -> Presentation : clickSubmitButton()
Presentation -> Proxy ++ : POST api/sub/private/update-sub
Proxy -> Proxy  : <color:purple> Authentication
Proxy -> APIController ++ : POST api/sub/private/update-sub
APIController -> SubmissionManager : handleSubmission\n(UserID, SubmissionData)
activate SubmissionManager
' SubmissionManager -> SubmissionManager : check(submission)
SubmissionManager -> PlatformEntityManager : insertOrUpdate(UserID, Submission)
activate PlatformEntityManager
PlatformEntityManager -> PlatformDBMS : insertOrUpdate(SubmissionData)
activate PlatformDBMS
PlatformDBMS --> PlatformEntityManager : success
deactivate PlatformDBMS
PlatformEntityManager --> SubmissionManager : success 
deactivate PlatformEntityManager
SubmissionManager --> APIController : success
deactivate SubmissionManager
APIController -> SuggestionMechanism ++ : createSuggestions(UserID, SubmissionData)
SuggestionMechanism -> PlatformEntityManager ++ : retriveRecommendationParameters(SubmissionData)
PlatformEntityManager -> PlatformDBMS ++ : buildAndExecuteQuery(Query, class)
PlatformDBMS --> PlatformEntityManager -- : result
PlatformEntityManager --> SuggestionMechanism -- : result
SuggestionMechanism -> SuggestionMechanism : generateSuggestions\n(RecommendationParameters)
SuggestionMechanism -> PlatformEntityManager ++ : insertSuggestion(UserID, Suggestion)
PlatformEntityManager -> PlatformDBMS ++ : insert(UserID, Suggestion)
PlatformDBMS --> PlatformEntityManager -- : success
PlatformEntityManager -->  SuggestionMechanism -- : success
SuggestionMechanism -> APIController -- : Suggestions
APIController -> RecommendationProcess ++ : initiateRecommendationAlgorithm(UserID, SubmissionData)
RecommendationProcess -> RecommendationProcess : generateParameters(SubmissionData)
RecommendationProcess -> UserManager ++ : retreiveSubs(Parameters)
UserManager -> PlatformEntityManager ++ : retreiveSubs(Parameters)
PlatformEntityManager -> PlatformDBMS ++ : buildAndExecuteQuery(Query, class)
PlatformDBMS --> PlatformEntityManager -- : result
PlatformEntityManager --> UserManager -- : result
UserManager --> RecommendationProcess -- : UserList
RecommendationProcess -> RecommendationProcess : generateRecommendations(UserList)
RecommendationProcess -> PlatformEntityManager ++ : insertRecommendations(User, UserList)
PlatformEntityManager -> PlatformDBMS ++ : insert(UserList, Recommendations)
PlatformDBMS --> PlatformEntityManager -- : success
PlatformEntityManager -->  RecommendationProcess -- : success
RecommendationProcess --> APIController -- : successMessage
APIController -> UserManager ++ : notifyUsers(UserIDs, Data)
UserManager ->> NotificationManager ++ : notifyUsers(UserIDs, Data)
loop for every user
    NotificationManager -> NotificationManager : <color:purple> sentNotification\n <color:purple>(UserIDs, Data)
end
NotificationManager --> UserManager -- : success
UserManager --> APIController -- : success
APIController --> Proxy : 201 Created :\n SubmissionID, Suggestions
deactivate APIController
Proxy --> Presentation : 201 Created :\n SubmissionID, Suggestions
deactivate Proxy
Presentation --> Participant : displaySubmissionSuggestions\n(SubmissionID)
deactivate Presentation
deactivate Participant
@enduml
