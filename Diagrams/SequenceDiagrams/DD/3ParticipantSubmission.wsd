@startuml ParticipantSubmission
skinparam sequenceMessageAlign center
actor       Participant
participant Presentation
entity      Proxy
participant APIController
participant SubmissionManager
participant SuggestionMechanism
participant RecommendationProcess
participant UserManager
participant PlatformEntityManager
participant NotificationManager
database    PlatformDBMS

activate Participant
activate Presentation
Participant -> Presentation : clickSubmitButton()
Presentation -> Proxy ++ : POST api/comm/private/{SubmissionType}
Proxy -> Proxy  : <color:purple> Authentication()
Proxy -> APIController ++ : POST api/comm/private/{SubmissionType}
APIController -> SubmissionManager : handleSubmission(UserID, SubmissionData)
activate SubmissionManager
SubmissionManager -> SubmissionManager : check(submission)
SubmissionManager -> PlatformEntityManager : update(UserID, Submission)
activate PlatformEntityManager
PlatformEntityManager -> PlatformDBMS : insertSubmission(SubmissionData)
activate PlatformDBMS
PlatformDBMS --> PlatformEntityManager : queryResult
deactivate PlatformDBMS
PlatformEntityManager --> SubmissionManager : queryResult
deactivate PlatformEntityManager
SubmissionManager --> APIController : successMessage
deactivate SubmissionManager
APIController -> SuggestionMechanism ++ : createSuggestions(UserID, SubmissionData)
SuggestionMechanism -> PlatformEntityManager ++ : retriveRecommendationParameters()
PlatformEntityManager -> PlatformDBMS ++ : buildAndExecuteQuery(Query, class)
PlatformDBMS --> PlatformEntityManager -- : RecommendationParameters
PlatformEntityManager --> SuggestionMechanism -- : RecommendationParameters
SuggestionMechanism -> SuggestionMechanism : generateSuggestions()
SuggestionMechanism -> PlatformEntityManager ++ : insertSuggestion(UserID, Suggestion)
PlatformEntityManager -> PlatformDBMS ++ : insert(UserID, Suggestion)
PlatformDBMS --> PlatformEntityManager -- : queryResult
PlatformEntityManager -->  SuggestionMechanism -- : queryResult
SuggestionMechanism -> APIController -- : suggestions
APIController -> RecommendationProcess ++ : initiateRecommendationAlgorithm(UserID, SubmissionData)
RecommendationProcess -> RecommendationProcess : generateParameters()
RecommendationProcess -> UserManager ++ : retreiveUsers(Parameters)
UserManager -> PlatformEntityManager ++ : retreiveUsers(Parameters)
PlatformEntityManager -> PlatformDBMS ++ : buildAndExecuteQuery(Query, class)
PlatformDBMS --> PlatformEntityManager -- : queryResult
PlatformEntityManager --> UserManager -- : UserList
UserManager --> RecommendationProcess -- : UserList
RecommendationProcess -> PlatformEntityManager ++ : insertRecommendations(User, UserList)
PlatformEntityManager -> PlatformDBMS ++ : insert(UserList, Recommendations)
PlatformDBMS --> PlatformEntityManager -- : queryResult
PlatformEntityManager -->  RecommendationProcess -- : queryResult
RecommendationProcess --> APIController -- : successMessage
APIController -> UserManager ++ : notifyUsers(UserIDList, Data)
UserManager ->> NotificationManager ++ : notifyUsers(UserIDList, Data)
loop for every user
    NotificationManager -> NotificationManager : <color:purple> sentNotification(UserIDList, Data)
end
NotificationManager --> UserManager -- : result
UserManager --> APIController -- : result
APIController --> Proxy : 201 Created : SubmissionID, suggestions
deactivate APIController
Proxy --> Presentation : 201 Created : SubmissionID, suggestions
deactivate Proxy
Presentation --> Participant : displaySubmissionSeggestions(SubmissionID)
deactivate Presentation
deactivate Participant
@enduml
