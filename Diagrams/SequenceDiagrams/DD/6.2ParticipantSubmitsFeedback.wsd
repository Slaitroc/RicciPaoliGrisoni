@startuml SubmitFeedback
skinparam sequenceMessageAlign center
actor       Participant
participant  Presentation
entity      Proxy
participant APIController
participant FeedbackMechanism
participant PlatformEntityManager
database    PlatformDBMS

activate Participant
activate Presentation
Participant -> Presentation  : pressSubmitFeedback()
Presentation -> Proxy ++ : PUT api/feedback/private/\n{RecommendationID}/{FeedbackID}/submit
Proxy -> Proxy : <color:purple> Authentication
Proxy -> APIController ++ : PUT api/feedback/private/\n{RecommendationID}/{FeedbackID}/submit
APIController -> FeedbackMechanism ++ : submitFeedback\n(FeedbackID, RecommendationID)
FeedbackMechanism -> PlatformEntityManager ++ : saveFeedback\n(FeedbackID, RecommendationID)
PlatformEntityManager -> PlatformDBMS ++ : update\n(FeedbackID, Feedback, RecommendationID)
PlatformDBMS --> PlatformEntityManager -- : success
PlatformEntityManager --> FeedbackMechanism -- : success
FeedbackMechanism -> PlatformEntityManager ++ : retrieveRecommendationInfo\n(RecommendationID)
PlatformEntityManager -> PlatformDBMS ++ : buildAndExecuteQuery\n(Query, Class)
PlatformDBMS --> PlatformEntityManager -- : result
PlatformEntityManager --> FeedbackMechanism -- : result
FeedbackMechanism -> FeedbackMechanism : computeRecommendationParameters\n(Data)
FeedbackMechanism -> PlatformEntityManager ++ : updateRecommendationParameters\n(Parameters)
PlatformEntityManager -> PlatformDBMS ++ : update(Parameters)
PlatformDBMS --> PlatformEntityManager -- : success
PlatformEntityManager --> FeedbackMechanism -- : success
FeedbackMechanism --> APIController -- : success
APIController --> Proxy -- : 200 OK  
Proxy --> Presentation -- : 200 OK 
Presentation --> Participant -- : displaySuccessMessage()
@enduml