@startuml Spontaneous Application Submission
skinparam sequenceMessageAlign center

actor       Student
participant  Presentation
entity      Proxy
participant APIController
participant Someone
participant NotificationManager
participant PlatformEntityManager
database    PlatformDBMS

activate Student
activate Presentation
Student -> Presentation : clickSubmitSpontaneousApplication()

Presentation -> Proxy ++ : POST api/comm/private/application
Proxy -> Proxy  : <color:purple> Authentication()
Proxy -> APIController ++ : POST api/comm/private/application
APIController -> Someone ++ : addSpontaneousApplication(StudentID, CompanyID)
Someone -> PlatformEntityManager ++ : addSpontaneousApplication(StudentID, CompanyID) 
PlatformEntityManager -> PlatformDBMS ++ : insert(StudentID, CompanyID)
PlatformDBMS --> PlatformEntityManager -- : SpontaneousApplicationID
PlatformEntityManager --> Someone -- : SpontaneousApplicationID
Someone -> APIController -- : SpontaneousApplicationID
APIController -> NotificationManager ++ : notify(CompanyID, SpontaneousApplicationTag)
NotificationManager -> NotificationManager : notify(CompanyID)
NotificationManager --> APIController -- : notificationSent
APIController --> Proxy -- : 200 OK : Spontaneous Application Submitted
Proxy --> Presentation -- : 200 OK : Spontaneous Application Submitted
Presentation --> Student -- : displaySuccessMessage()

@enduml