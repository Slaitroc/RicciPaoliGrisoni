@startuml Spontaneous Application Submission
skinparam sequenceMessageAlign center

actor       Student
participant  Presentation
entity      Proxy
participant APIController
participant Someone
participant NotificationManager
participant PlatformEntityManager
database    PlatformDBMS

activate Student
activate Presentation
Student -> Presentation : clickSubmit\nSpontaneousApplication()

Presentation -> Proxy ++ : POST api/sub/private/\napplication/{CompanyID}
Proxy -> Proxy  : <color:purple> Authentication
Proxy -> APIController ++ : POST api/sub/private/\napplication/{CompanyID}
APIController -> Someone ++ : addSpontaneousApplication\n(StudentID, CompanyID)
Someone -> PlatformEntityManager ++ : addSpontaneousApplication\n(StudentID, CompanyID) 
PlatformEntityManager -> PlatformDBMS ++ : insert(StudentID, CompanyID)
PlatformDBMS --> PlatformEntityManager -- : success
PlatformEntityManager --> Someone -- : success
Someone -> APIController -- : success
APIController -> NotificationManager ++ : notifyUser(CompanyID, Data)
NotificationManager -> NotificationManager : <color:purple> sendNotification(CompanyID, Data)
NotificationManager --> APIController -- : success
APIController --> Proxy -- : 200 OK 
Proxy --> Presentation -- : 200 OK 
Presentation --> Student -- : displaySuccessMessage()

@enduml