@startuml Company Accepts Spontaneous Application
skinparam sequenceMessageAlign center

actor       Company
participant Presentation
entity      Proxy
participant APIController
participant SubmissionManager
participant NotificationManager
participant InterviewManager
participant PlatformEntityManager
database    PlatformDBMS

activate Company
activate Presentation
Company -> Presentation : clickAcceptSpontaneousApplication()
Presentation -> Proxy ++ : POST api/comm/private/application\n/{ApplicationID}/accept
Proxy -> Proxy : <color:purple> Authentication()
Proxy -> APIController ++ : POST api/comm/private/application\n/{ApplicationID}/accept
APIController -> SubmissionManager ++ : acceptApplication(ApplicationID)
SubmissionManager -> PlatformEntityManager ++ : updateAndGetApplicationStatus(ApplicationID)
PlatformEntityManager -> PlatformDBMS ++ : update&query(ApplicationID)
PlatformDBMS --> PlatformEntityManager -- : result
PlatformEntityManager --> SubmissionManager -- : result
SubmissionManager --> APIController -- : StudentID

APIController -> NotificationManager ++ : notifyUser(StudentID, Data)
NotificationManager -> NotificationManager : <color:purple> sendNotification(StudentID, Data)
NotificationManager --> APIController -- : notificationSent
APIController -> InterviewManager ++ : createInterview(StudentID, CompanyID)
InterviewManager -> PlatformEntityManager ++ : createInterview(StudentID, CompanyID)
PlatformEntityManager -> PlatformDBMS ++ : insert(StudentID, CompanyID)
PlatformDBMS --> PlatformEntityManager -- : success
PlatformEntityManager --> InterviewManager -- : success
InterviewManager --> APIController -- : success
APIController --> Proxy : 200 OK 
deactivate APIController
Proxy --> Presentation : 200 OK 
deactivate Proxy
Presentation --> Company : displaySuccessMessage()
@enduml