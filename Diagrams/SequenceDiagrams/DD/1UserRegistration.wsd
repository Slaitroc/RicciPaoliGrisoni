
@startuml Registration
skinparam sequenceMessageAlign center
actor       User
participant EmailClient #99FF99
participant Presentation
entity      Proxy
participant Authenticator
participant APIController
participant AccountManager
participant PlatformEntityManager
participant NotificationManager
database    PlatformDBMS
activate User
activate Presentation
User -> Presentation : clickSignUpButton()
activate User
Presentation -> Proxy : POST api/account/public/register
activate Proxy

Proxy -> APIController : POST api/account/public/register
activate APIController
APIController -> AccountManager : createUser(UserData, UserType)
activate AccountManager
AccountManager -> PlatformEntityManager : buildAndExecuteQuery(Query, Class)
activate PlatformEntityManager
PlatformEntityManager -> PlatformDBMS : executeQuery(Query)
activate PlatformDBMS
PlatformDBMS --> PlatformEntityManager : queryResult
deactivate PlatformDBMS
PlatformEntityManager --> AccountManager : queryResult
deactivate PlatformEntityManager
alt failure: accountFound
AccountManager --> APIController : failureMessage
APIController --> Proxy : 409 Conflict
Proxy --> Presentation : 409 Conflict
Presentation --> User !! : displayErrorMessage()
end
AccountManager -> PlatformEntityManager : insert(User)
activate PlatformEntityManager
PlatformEntityManager -> PlatformDBMS : insert(User, TmpFlag = true)
activate PlatformDBMS
PlatformDBMS --> PlatformEntityManager : success
deactivate PlatformDBMS
PlatformEntityManager --> AccountManager : success
deactivate PlatformEntityManager
AccountManager --> APIController : UserID
deactivate AccountManager
APIController --> Proxy : 201 Created : UserID
deactivate APIController
Proxy --> Presentation : 201 Created : UserID
deactivate Proxy
Presentation -> Proxy : POST api/auth/public/createToken
activate Proxy
Proxy -> Authenticator: POST api/user/createToken
activate Authenticator
Authenticator -> Authenticator : generateToken(UserID)
Authenticator --> Proxy : 201 Created : Token
deactivate Authenticator
Proxy --> Presentation : 201 Created : Token
deactivate Proxy
Presentation -> Presentation : saveToken(token)
Presentation -> Presentation : <color:purple> RequestDeviceToken()
note right of Presentation : for RequestDeviceToken call stack see the Notification Sequence Diagram 
Presentation -> Proxy : POST api/notify/private/sendEmail
activate Proxy
Proxy -> Authenticator : GET api/auth/vaidate
activate Authenticator
Authenticator -> Authenticator : validateToken()
Authenticator --> Proxy : 200 OK
deactivate Authenticator
Proxy -> NotificationManager : POST api/notify/private/sendEmail
activate NotificationManager
NotificationManager --> Proxy : 200 OK
deactivate NotificationManager
Proxy --> Presentation : 201 Created
deactivate Proxy
Presentation --> User : emailSentMessage
deactivate Presentation
User -> EmailClient : clickEmailLink(token)
activate EmailClient
EmailClient -> Proxy : POST api/user/confirmEmail
activate Proxy
Proxy -> Authenticator : GET api/user/confirmEmail
activate Authenticator
Authenticator --> Proxy : UserID
deactivate Authenticator
Proxy -> APIController : POST api/user/confirmEmail
activate APIController
APIController -> AccountManager : confirmEmail(UserID)
deactivate Authenticator
activate AccountManager
AccountManager -> PlatformEntityManager : valid(UserID) 
activate PlatformEntityManager
PlatformEntityManager -> PlatformDBMS : update(UserID, TmpFlag = false)
activate PlatformDBMS
PlatformDBMS --> PlatformEntityManager : success
deactivate PlatformDBMS
PlatformEntityManager --> AccountManager : success
deactivate PlatformEntityManager
AccountManager --> APIController : successMessage
deactivate AccountManager
APIController --> Proxy : 200 OK : successMessage
deactivate APIController
Proxy --> EmailClient :  200 OK : successMessage
deactivate Proxy
EmailClient --> User : emailConfirmedMessage
deactivate EmailClient
deactivate Proxy
deactivate User 
@enduml
