@startuml CompanySaveInterview
skinparam sequenceMessageAlign center
actor       Company
participant Presentation
entity      Proxy
participant Authenticator
participant APIController
participant InterviewsManager
participant PlatformEntityManager
database    PlatformDBMS

activate Company
Company -> Presentation : clickSaveInterview()
activate Presentation
Presentation -> Proxy : POST api/interviews/private/saveInterview/{InterviewID}/full?<params>
activate Proxy
Proxy -> Authenticator : GET api/auth/validate
activate Authenticator
Authenticator -> Authenticator : validateToken()
alt Expired Token
    Authenticator --> Proxy : 401 Unauthorized : Token is expired
    Proxy --> Presentation : 401 Unauthorized : Token is expired
    else Refresh Token is Available
        Presentation --> Proxy : POST api/auth/refreshToken
        Proxy -> Authenticator : POST api/auth/refreshToken
        Authenticator -> Authenticator : refreshToken(token)
        Authenticator --> Proxy : 200 OK : Token
        Proxy --> Presentation : 200 OK : Token
        Presentation --> Presentation : saveToken()
        Presentation -> Proxy : POST api/interviews/private/sendInterview/{InterviewID}/full?<params>
        Proxy -> Authenticator : GET api/auth/validate
    else Refresh Token Expired
        Presentation --> Presentation : saveCurrentPage()
        Presentation --> Presentation : redirectToLogin()
        Presentation --> Company : displayErrorMessage()
        Company -> Presentation : enterCredentials(username, password)
        Presentation -> Proxy : POST api/auth/login
        Proxy -> Authenticator : POST api/auth/validateCredentials
        Authenticator -> Authenticator : validateCredentials(username, password)
        Authenticator -> Authenticator : generateToken()
        Authenticator --> Proxy : 200 OK : Token
        Proxy --> Presentation : 200 OK : Token
        Presentation --> Presentation : saveToken()
        Presentation --> Presentation : redirectToLastPage() 
        Presentation -> Proxy : POST api/interviews/private/sendInterview/{InterviewID}/full?<params>
        Proxy -> Authenticator : GET api/auth/validate
end
Authenticator --> Proxy : 200 OK : UserID
deactivate Authenticator
Proxy -> APIController : POST api/interviews/private/saveInterview/{InterviewID}/full?<params>
activate APIController
APIController -> APIController : verifyCallParameters()
APIController -> InterviewsManager : saveInterview(InterviewID, Params, UserID)
activate InterviewsManager
InterviewsManager -> PlatformEntityManager : saveInterview(InterviewID, Params, UserID)
activate PlatformEntityManager
PlatformEntityManager -> PlatformDBMS : buildAndExecuteQuery(Query, Class)
activate PlatformDBMS
PlatformDBMS --> PlatformEntityManager : result
deactivate PlatformDBMS
PlatformEntityManager --> InterviewsManager : result
deactivate PlatformEntityManager
InterviewsManager --> APIController : result
deactivate InterviewsManager
APIController --> Proxy : 200 OK : InterviewID
deactivate APIController
Presentation --> Company : displayInterviewSavedMsg()
deactivate Presentation
