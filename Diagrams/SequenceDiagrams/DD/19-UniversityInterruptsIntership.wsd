@startuml
skinparam sequenceMessageAlign center

actor       University
participant  Presentation
entity      Proxy
participant APIController
participant CommunicationManager
participant PlatformEntityManager
participant NotificationManager
database    PlatformDBMS

activate University
University -> Presentation : clickInterruptInternship()
activate Presentation
Presentation --> University : displayConfirmButton()
deactivate Presentation
University -> Presentation : clickConfirmButton()
activate Presentation
Presentation -> Proxy : POST api/comm/private/\n{commID}/interrupt-internship
activate Proxy
Proxy -> Proxy : <color:purple> Authentication
Proxy -> APIController : POST api/comm/private/\n{commID}/interrupt-internship
activate APIController
APIController -> CommunicationManager : interruptInternship(commID, Reason)
activate CommunicationManager
CommunicationManager -> PlatformEntityManager : updateInternshipOffer\n(InternShipOffer, Reason)
activate PlatformEntityManager
PlatformEntityManager -> PlatformDBMS : updateInternshipOffer\n(InternShipOffer, Reason)
activate PlatformDBMS
PlatformDBMS --> PlatformEntityManager : success
deactivate PlatformDBMS
PlatformEntityManager --> CommunicationManager : success
deactivate PlatformEntityManager
CommunicationManager --> APIController : InternShipOffer
deactivate CommunicationManager
APIController -> NotificationManager : notifyUser(Data, UserIDs)
activate NotificationManager
NotificationManager -> NotificationManager : <color:purple> sendNotification(UserIDs, Data)
NotificationManager --> APIController : success
deactivate NotificationManager
deactivate CommunicationManager
APIController --> Proxy : 200 OK
deactivate APIController
Proxy --> Presentation : 200 OK
deactivate Proxy
Presentation --> University : displayTerminatedInternship()
deactivate Presentation
@enduml

