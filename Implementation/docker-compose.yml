services:
  sc-server-service:
    image: openjdk:21-jdk-slim
    container_name: sc_server-container
    working_dir: /sc_server
    entrypoint: ["java", "-jar", "/sc_server/sc_server.jar"]
    volumes:
      - ./sc_server/target/sc_server.jar:/sc_server/sc_server.jar
    ports:
      - "8443:8443"
    environment:
      SPRING_DATASOURCE_URL: jdbc:mariadb://application-database-service:3306/sc_DB
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: password
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.application-service.loadbalancer.server.port=8443"

      #____________ROUTERS____________#
      # APPLICATION SERVICE
      - "traefik.http.routers.application-container.rule=Host(`10.147.19.167`) &&  PathPrefix(`/application-api`)"
      - "traefik.http.routers.application-container.service=application-service"
      - "traefik.http.routers.application-container.entrypoints=web"
      - "traefik.http.routers.application-container.middlewares=cors-headers"

    networks:
      - traefik-network
      - zerotier_network
    depends_on:
      - application-database-service
      - notification-database-service
    restart: always

  sc-auth-service:
    image: openjdk:21-jdk-slim
    container_name: sc_auth-container
    working_dir: /sc_auth
    entrypoint: ["java", "-jar", "/sc_auth/sc_auth.jar"]
    ports:
      - "8444:8444"
    volumes:
      - ./sc_auth/target/sc_auth.jar:/sc_auth/sc_auth.jar
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.auth-service.loadbalancer.server.port=8444"

      #____________ROUTERS____________#
      # AUTH SERVICE
      - "traefik.http.routers.auth-container.rule=Host(`10.147.19.167`) &&  PathPrefix(`/auth-api`)"
      - "traefik.http.routers.auth-container.service=auth-service"
      - "traefik.http.routers.auth-container.entrypoints=web"
      - "traefik.http.routers.auth-container.middlewares=cors-headers"

    networks:
      - traefik-network
      - zerotier_network
    restart: always

  application-database-service:
    image: mariadb:10.7
    container_name: application-database-container
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: sc_DB
    ports:
      - "3306:3306" # Porta MariaDB esposta
    healthcheck:
      test:
        [
          "CMD",
          "mysqladmin",
          "ping",
          "-h",
          "localhost",
          "--user=root",
          "--password=password",
        ]
      interval: 10s
      timeout: 5s
      retries: 3
    volumes:
      - platform_db_data:/var/lib/mysql
    networks:
      - traefik-network

  notification-database-service:
    image: mariadb:10.7
    container_name: notification-database-container
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: sc_DB
    ports:
      - "3307:3306" # Porta MariaDB esposta
    healthcheck:
      test:
        [
          "CMD",
          "mysqladmin",
          "ping",
          "-h",
          "localhost",
          "--user=root",
          "--password=password",
        ]
      interval: 10s
      timeout: 5s
      retries: 3
    volumes:
      - notification_db_data:/var/lib/mysql
    networks:
      - traefik-network

  traefik-service:
    image: traefik:latest
    container_name: traefik-container
    ports:
      - "8445:8445"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro" # Accesso al socket Docker
      - "./proxy/traefik.yaml:/etc/traefik/traefik.yaml"
    labels:
      - "traefik.http.services.traefik.loadbalancer.server.port=8445"
      - "traefik.enable=true"
      #____________ROUTERS____________#
      # DASHBOARD ROUTER ---> to traefik
      - "traefik.http.routers.traefik.rule=HostRegexp(`{host:.+}`)"
      - "traefik.http.routers.traefik.entrypoints=web"
      - "traefik.http.routers.traefik.service=api@internal"
      # PRIVATE CALLS ROUTER ---> to sc-auth-container
      - "traefik.http.routers.private-router.rule=PathRegexp(`.*private.*`)"
      - "traefik.http.routers.private-router.entrypoints=web"
      - "traefik.http.routers.private-router.middlewares=cors-headers, add-header, auth-check"
      - "traefik.http.routers.private-router.service=application-service"
      - "traefik.http.routers.private-router.priority=200"

      #____________MIDDLEWARES____________#
      # MIDDLEWARE AUTH DASHBOARD
      - "traefik.http.routers.traefik.middlewares=auth"
      - "traefik.http.middlewares.auth.basicauth.users=user:$$apr1$$dtvOjBZO$$sfd2sw28jzU244hTPqN/B."
      # MIDDLEWARE ADD HEADER ---> adds an header when private calls are intercepted
      - "traefik.http.middlewares.add-header.headers.customrequestheaders.X-Custom-Header=TraefikMiddleware"
      # MIDDLEWARE AUTH-API CHECK---> /auth-api/validate
      - "traefik.http.middlewares.auth-check.forwardauth.address=http://sc-auth-service:8444/auth-api/validate"
      - "traefik.http.middlewares.auth-check.forwardauth.trustForwardHeader=true"
      # MIDDLEWARE CORS HEADERS (for internal calls)
      - "traefik.http.middlewares.cors-headers.headers.accessControlAllowOriginList=*"
      - "traefik.http.middlewares.cors-headers.headers.accessControlAllowMethods=GET,POST,PUT,DELETE,OPTIONS"
      - "traefik.http.middlewares.cors-headers.headers.accessControlAllowHeaders=*"
      - "traefik.http.middlewares.cors-headers.headers.accessControlAllowCredentials=true"


    networks:
      - traefik-network
      - zerotier_network

networks:
  traefik-network:
    driver: bridge
  zerotier_network:
    external: true
    name: zerotier_network

volumes:
  platform_db_data:
  notification_db_data:
